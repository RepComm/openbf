Star Wars Battlefront II (2005) Multiplayer Protocol

General:
All communication between gameserver and client is done via UDP. Packets are "bit-packed".
This means that the data is not aligned to the byte borders making it unreadable for humans.

SWBF2 segments data into 32-bit "chunks". Sometimes data is aligned to a chunk border by adding 0-padding.
If a packet's lenght is not a multiple of 32bits, 0-padding will be added at the end of the packet.
Note that the first chunk begins at the first payload bit. The packet header must not be included when aligning to chunk borders.

TODO: assuming that every int is unsigned for now - this is obviously not always correct.

---

Packet frame:

(UInt8)		message ID
(UInt16)	sequence ID (set to 0xffff for c2s)
(UInt8)		? static 0
(UInt8)		? 1 (s2c) or 0 (c2s)

---

String format:
(UInt8) 	string length
(char[])	string as char array, Win-1252 encoded

---

IP-Endpoint format:

(UInt8[])	IPv4 WAN address
(UInt16)	port number
(bool)		has_local
if(has_local) {
(bool)		???
(UInt8[])	IPv4 LAN address
(UInt16)	port number
}

---

Packet 0x04 - connection request packet

(UInt12) 	client version (0: 1.0, 1: 1.1<)
(UInt3)		"guest" count
(UInt32)	CRC checksum of password, 0 if no password
(UInt2)		???
(String)	Playername
(PAD)		padding to chunk border
(UInt8[4])	??? (seems to be 0 all the time)

for each guest {
(String)	guest name
}

(UInt32)	??? (set to 0, does some stuff if != 0)

for each guest {
(UInt32) 	??? (set to 0, does some stuff if != 0)
}

(bool)		has crash
if(has_crash) {
(UInt32)	crash memory offset
}

(bool)		???
(bool)		???
(IPEP)		client endpoint
(IPEP)		server endpoint
(bool)		???
(UInt32)	??? (is set to 0x30303031 if 0, set to 0)
(PAD)		padding to chunk border	

Notes:
- The "crash" concept seems to be some kind of client error logging.
  When a client sends a crash address, the server will write it to a file called 
  "crashes.txt" ("player %s had crash at 0x%x\n")

04 ff ff 00 00 01 00 00  00 00 80 0c 98 ca 96 ca
d6 e6 00 00 00 00 00 00  00 00 00 00 00 de 42 c4
e5 07 00 08 18 f5 3d 60  c9 21 f8 6d 31 5c c9 01
00 00 00 00 00

---

Packet 0x05 - join error packet

(UInt4)		join error code
(PAD)		padding to chunk border

Error codes:
0 - ifs.mp.joinerrors.banned
1 - ifs.mp.joinerrors.full
2 - ifs.mp.joinerrors.password
3 - ifs.mp.joinerrors.game
4 - ifs.mp.joinerrors.version
5 - ifs.mp.joinerrors.booted
6 - ifs.mp.joinerrors.connectlost
7 - ifs.mp.joinerrors.missingdc
8 - ifs.mp.joinerrors.cdkey
9 - ifs.mp.joinerrors.doesnotexist
A - ifs.mp.joinerrors.cantconnect

00000000  05 00 00 00 01 02 00 00  00                        ........ .

---

Packet 0x06 - join accept packet

(UInt6)		assigned slot
(UInt3)		guest count
(IPEP)		client endpoint
(bool)		has_netinfo
if(has_netinfo) {
(UInt12) 	latency
(UInt12) 	bandwidth
(UInt7)		loss
(UInt7)		jitter
}
//NOTE: there seems to be additional engine code here which is unreachable for SWBF2
(bool)		???
(UInt2)		???
(bool)		has_x
if(has_x) {
(Uint6)		???
}
(bool)		???
(bool)		has_challenge
(String)	challenge
(UInt4)		???
(bool)		has_y
if(has_y) {
(bool)		???
}
(UInt10)	???
(UInt12)	???	(I have a really strong suspicion that this is some sort of bw limiter)
(UInt12)	??? (maybe experiment with /bandwidth and /throttle a bit)
for(i = 1; i < 65; i++) {
(bool)		has_player
if(has_player) {
(bool)		has_ai
if(!has_ai) {
(UInt10)	ping
(UInt12)	Score
(UInt12)	Kills
}else{
(UInt6)		???
}
}

(bool)		has_details
if(has_details) {
(String)	name
(bool)		???
(bool)		???
(bool)		!is_host
(PAD)		padding to chunk border
(UInt32)	Gamspy Profile ID
}

if(!has_ai) {
(IPEP)		ClientEndPoint
}
}
NOTE: probably game setup stuff like scores, timer etc.
(bool)		???
(UInt21)	???
(UInt32)	???
(UInt32)	???
(UInt32)	???
(String)	map name
(UInt32)	???
(UInt32)	???
while(z != 0) {
(UInt32)	z
}
(UInt32)	???
(UInt10)	???
(UInt3)		???
(PAD)		padding to chunk border

---

Packet 0x07 - challenge response packet

(String)	player name
(bool)		???
(bool)		???
(bool)		???
(String)	server name
(String)	map name
(UInt16)	???
(UInt24)	??? (sequenced)
while(has_player)
{
(bool)		has_player
(UInt6)		slot
(PAD)		padding to chunk border
(UInt32)	GameSpy ID
}
(bool)		has_challenge_response
if(has_challenge_response) {
(String)	challenge response
}

TODO ...
Note: server seems to accept this packet as is even though theres still some payload missing

---

Packet 0x08 - game setup packet

(bool)		team 1 auto assign
(bool)		team 2 auto assign
(bool)		???
(UInt32)	???
(UInt32)	???
(String)	map name
(UInt32)	session id
(bool)		enable_heroes
if(enable_heroes) {
(UInt3)		herounlock
(UInt9)		herounlockvalue
(UInt2)		heroplayer
(UInt2)		herorespawn
(UInt9)		herorespawnvalue
}
(UInt8)		kick player majority
(bool)		enable ff
(bool)		enable autoaim
(UInt8)		spawn protection
(bool)		show names

(bool)		???

TODO ...

---

Packet 0x11 - ???
11 ff ff 00 00 00 00 00  00

---

Packet 0x14 - ???

(bool)		???
(UInt8[4])	???

---

Packet 0x0C - ???

1c 08 00  00 00 00 00 00 00 00 00   ........ ........
    00000DE3  fc 01 6a 80 03 18 fe bf  d6 fe ff 92 70 4b fb 33   ..j..... ....pK.3
    00000DF3  d6 81 38 f9 8f ff 07 a0  d3 06 f4 7f 74 da 80 fe   ..8..... ....t...
    00000E03  0f e0 ff ff fb ff ff fe  ff bf f0 7f fa fd 7e bf   ........ ......~.
    00000E13  ff 07 00 00 00 00 00 00  00 00 00 00 00 c0 00 fe   ........ ........
    00000E23  bf d6 fe ff 92 70 68 fc  13 27 81 1b 00 90 ff 27   .....ph. .'.....'
    00000E33  00 3a 6d 40 ff 47 a7 0d  e8 ff 00 fe ff bf ff ff   .:m@.G.. ........
    00000E43  ef ff ff 2b f0 7f 86 df  ef f7 fb 7f 00 00 00 00   ...+.... ........
    00000E53  00 00 00 00 00 00 00 00  1c 10 42 c0 c0 55 fa b0   ........ ..B..U..
    00000E63  fe 45 07 a4 33 81 7c d8  4f 14 f6 9f 82 11 00 3c   .E..3.|. O......<
    00000E73  c0 ff 0c 17 00 80 ff ff  f7 ef df bf df ef f7 fb   ........ ........
    00000E83  7f 10 08 1a c0 2c 10 27  79 64 69 0b 8c b7 82 6e   .....,.' ydi....n
    00000E93  0c 50 e7 39 ff 59 0d 00  cc cc ff 9a 11 00 80 ff   .P.9.Y.. ........
    00000EA3  ff f7 0f e3 bf df ef f7  fb 7f 12 f0 2b 00 58 00   ........ ....+.X.
    00000EB3  00 18 00 00 08 43 86 06  00 0e 00 00 90 03 00 00   .....C.. ........
    00000EC3  80 32 33 2b 08 80 07 00  08 00 22 00 00 00 00 ff   .23+.... ..".....
    00000ED3  ff 48 00 e0 32 4c 00 00  00                        .H..2L.. .


